<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="369px" preserveAspectRatio="none" style="width:343px;height:369px;" version="1.1" viewBox="0 0 343 369" width="343px" zoomAndPan="magnify"><defs><filter height="300%" id="f1xtzlptrxv3he" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[426e75666daf533f17226ff4c87e20fd]
class Shape--><rect fill="#FEFECE" filter="url(#f1xtzlptrxv3he)" height="151.6406" id="Shape" style="stroke: #A80036; stroke-width: 1.5;" width="326" x="6" y="8"/><ellipse cx="147.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M149.7231,30.1431 Q149.1421,30.4419 148.5029,30.5913 Q147.8638,30.7407 147.1582,30.7407 Q144.6514,30.7407 143.3315,29.0889 Q142.0117,27.437 142.0117,24.3159 Q142.0117,21.1865 143.3315,19.5347 Q144.6514,17.8828 147.1582,17.8828 Q147.8638,17.8828 148.5112,18.0322 Q149.1587,18.1816 149.7231,18.4805 L149.7231,21.2031 Q149.0923,20.6221 148.4988,20.3523 Q147.9053,20.0825 147.2744,20.0825 Q145.9297,20.0825 145.2449,21.1492 Q144.5601,22.2158 144.5601,24.3159 Q144.5601,26.4077 145.2449,27.4744 Q145.9297,28.541 147.2744,28.541 Q147.9053,28.541 148.4988,28.2712 Q149.0923,28.0015 149.7231,27.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="35" x="167.75" y="28.5352">Shape</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="331" y1="40" y2="40"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="48"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="26" y="54.6348">int x</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="60.9551"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="26" y="67.5898">int y</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="331" y1="73.9102" y2="73.9102"/><ellipse cx="17" cy="84.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="26" y="88.5449">friend bool operator == (const Shape&amp;, const Shape&amp;)</text><ellipse cx="17" cy="97.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="26" y="101.5">friend istream&amp; operator &gt;&gt; (istream&amp;, Shape&amp;)</text><ellipse cx="17" cy="110.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="26" y="114.4551">friend ostream&amp; operator &lt;&lt; (ostream&amp;, const Shape&amp;)</text><ellipse cx="17" cy="123.7754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="26" y="127.4102">Shape (int x, int y)</text><ellipse cx="17" cy="136.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="26" y="140.3652">double area () const</text><ellipse cx="17" cy="149.6855" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="26" y="153.3203">void move (int x, int y)</text><!--MD5=[a7f9118cae7621dd25d25149752faef0]
class Circle--><rect fill="#FEFECE" filter="url(#f1xtzlptrxv3he)" height="138.6855" id="Circle" style="stroke: #A80036; stroke-width: 1.5;" width="325" x="6.5" y="220"/><ellipse cx="148.75" cy="236" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M151.2231,242.1431 Q150.6421,242.4419 150.0029,242.5913 Q149.3638,242.7407 148.6582,242.7407 Q146.1514,242.7407 144.8315,241.0889 Q143.5117,239.437 143.5117,236.3159 Q143.5117,233.1865 144.8315,231.5347 Q146.1514,229.8828 148.6582,229.8828 Q149.3638,229.8828 150.0112,230.0322 Q150.6587,230.1816 151.2231,230.4805 L151.2231,233.2031 Q150.5923,232.6221 149.9988,232.3523 Q149.4053,232.0825 148.7744,232.0825 Q147.4297,232.0825 146.7449,233.1492 Q146.0601,234.2158 146.0601,236.3159 Q146.0601,238.4077 146.7449,239.4744 Q147.4297,240.541 148.7744,240.541 Q149.4053,240.541 149.9988,240.2712 Q150.5923,240.0015 151.2231,239.4204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="32" x="169.25" y="240.5352">Circle</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7.5" x2="330.5" y1="252" y2="252"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14.5" y="260"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="22" x="26.5" y="266.6348">int r</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7.5" x2="330.5" y1="272.9551" y2="272.9551"/><ellipse cx="17.5" cy="283.9551" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="291" x="26.5" y="287.5898">friend bool operator == (const Circle&amp;, const Circle&amp;)</text><ellipse cx="17.5" cy="296.9102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="26.5" y="300.5449">friend istream&amp; operator &gt;&gt; (istream&amp;, Circle&amp;)</text><ellipse cx="17.5" cy="309.8652" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299" x="26.5" y="313.5">friend ostream&amp; operator &lt;&lt; (ostream&amp;, const Circle&amp;)</text><ellipse cx="17.5" cy="322.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="26.5" y="326.4551">Circle (int x, int y, int r)</text><ellipse cx="17.5" cy="335.7754" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="26.5" y="339.4102">double area () const override</text><ellipse cx="17.5" cy="348.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="26.5" y="352.3652">int radius () const</text><!--MD5=[d637a7d0c5b779627461b5a6979d5756]
reverse link Shape to Circle--><path d="M169,180.65 C169,193.81 169,207.12 169,219.67 " fill="none" id="Shape&lt;-Circle" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="162,180.2,169,160.2,176,180.2,162,180.2" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[515005f935acdeef0d5b4156bde90c64]
@startuml
Shape <|- - Circle

class Shape {
    - int x
    - int y
    + friend bool operator == (const Shape&, const Shape&)
    + friend istream& operator >> (istream&, Shape&)
    + friend ostream& operator << (ostream&, const Shape&)
    + Shape (int x, int y)
    + double area () const
    + void move (int x, int y)
    }

class Circle {
    - int r
    + friend bool operator == (const Circle&, const Circle&)
    + friend istream& operator >> (istream&, Circle&)
    + friend ostream& operator << (ostream&, const Circle&)
    + Circle (int x, int y, int r)
    + double area () const override
    + int radius () const
    }

@enduml

PlantUML version 1.2020.07(Sun Apr 19 06:42:40 CDT 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 13.0.2+8
Operating System: Mac OS X
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>